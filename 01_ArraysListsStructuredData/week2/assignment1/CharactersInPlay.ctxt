#BlueJ class context
comment0.target=CharactersInPlay
comment1.params=
comment1.target=CharactersInPlay()
comment2.params=person
comment2.target=void\ update(java.lang.String)
comment2.text=\r\n\ Write\ a\ void\ method\ named\ update\ that\ has\ one\ String\ parameter\ named\ person.\ \r\n\ This\ method\ should\ update\ the\ two\ ArrayLists,\ adding\ the\ character\u2019s\ name\ if\ it\ \r\n\ is\ not\ already\ there,\ \r\n\ and\ counting\ this\ line\ as\ one\ speaking\ part\ for\ this\ person.\ \r\n
comment3.params=
comment3.target=void\ findAllCharacters()
comment3.text=\r\n\ Write\ a\ void\ method\ called\ findAllCharacters\ that\ opens\ a\ file,\ and\ reads\ the\ \r\n\ file\ line-by-line.\ For\ each\ line,\ if\ there\ is\ a\ period\ on\ the\ line,\ extract\ the\ \r\n\ possible\ name\ of\ the\ speaking\ part,\ and\ call\ update\ to\ count\ it\ as\ an\ occurrence\r\n\ for\ this\ person.\ \r\n\ Make\ sure\ you\ clear\ the\ appropriate\ instance\ variables\ before\ each\ new\ file.\r\n
comment4.params=
comment4.target=void\ tester()
comment4.text=\r\n\ Write\ a\ void\ method\ called\ tester\ that\ has\ no\ parameters.\ This\ method\ should\ \r\n\ call\ findAllCharacters,\ and\ then\ for\ each\ main\ character,\ print\ out\ the\ main\ \r\n\ character,\ followed\ by\ the\ number\ of\ speaking\ parts\ that\ character\ has.\ A\ main\ \r\n\ character\ is\ one\ who\ has\ more\ speaking\ parts\ than\ most\ people.\ \r\n\ You\u2019ll\ have\ to\ estimate\ what\ that\ number\ should\ be.\ Test\ your\ method\ on\ the\ file\ \r\n\ \r\n
comment5.params=
comment5.target=int\ findIndexOfMax()
comment6.params=num1\ num2
comment6.target=void\ charactersWithNumParts(int,\ int)
comment6.text=\r\n\ Write\ a\ void\ method\ called\ charactersWithNumParts\ that\ has\ two\ int\ parameters\ named\r\n\ num1\ and\ num2,\ where\ you\ can\ assume\ num1\ should\ be\ less\ than\ or\ equal\ to\ num2.\ This\ method\r\n\ should\ print\ out\ the\ names\ of\ all\ those\ characters\ that\ have\ exactly\ number\ speaking\ parts,\ where\ number\r\n\ is\ greater\ than\ or\ equal\ to\ num1\ and\ less\ than\ or\ equal\ to\ num2.\ Add\ code\ in\ tester\ to\ test\ this\ method\ out.\r\n
comment7.params=
comment7.target=void\ testCharWithNumParts()
numComments=8
