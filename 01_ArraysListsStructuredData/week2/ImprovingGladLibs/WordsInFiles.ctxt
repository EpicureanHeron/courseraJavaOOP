#BlueJ class context
comment0.target=WordsInFiles
comment1.params=
comment1.target=WordsInFiles()
comment2.params=f
comment2.target=void\ addWordsFromFile(java.io.File)
comment2.text=\r\n\ Write\ a\ private\ void\ method\ named\ addWordsFromFile\ that\ has\ one\ parameter\ f\ \r\n\ of\ type\ File.\ This\ method\ should\ add\ all\ the\ words\ from\ f\ into\ the\ map.\ If\ a\ \r\n\ word\ is\ not\ in\ the\ map,\ then\ you\ must\ create\ a\ new\ ArrayList\ of\ type\ String\ with\ \r\n\ this\ word,\ and\ have\ the\ word\ map\ to\ this\ ArrayList.\ If\ a\ word\ is\ already\ in\ the\ map,\r\n\ then\ add\ the\ current\ filename\ to\ its\ ArrayList,\ unless\ the\ filename\ \r\n\ is\ already\ in\ the\ ArrayList.\ You\ can\ use\ the\ File\ method\ getName\ to\ get\ the\ filename\r\n\ of\ a\ file.\ \r\n
comment3.params=
comment3.target=void\ buildWordFileMap()
comment3.text=\r\n\ Write\ a\ void\ method\ named\ buildWordFileMap\ that\ has\ no\ parameters.\ This\ \r\n\ method\ first\ clears\ the\ map,\ and\ then\ uses\ a\ DirectoryResource\ to\ select\ a\ \r\n\ group\ of\ files.\ For\ each\ file,\ it\ puts\ all\ of\ its\ words\ into\ the\ map\ by\ calling\ \r\n\ the\ method\ addWordsFromFile.\ \r\n\ The\ remaining\ methods\ to\ write\ all\ assume\ that\ the\ HashMap\ has\ been\ built.\r\n\r\n
comment4.params=
comment4.target=int\ maxNumber()
comment4.text=\r\n\ Write\ the\ method\ maxNumber\ that\ has\ no\ parameters.\ This\ method\ returns\ the\ maximum\r\n\ number\ of\ files\ any\ word\ appears\ in,\ considering\ all\ words\ from\ a\ group\ of\ files.\ \r\n\ In\ the\ example\ above,\ there\ are\ four\ files\ considered.\ No\ word\ appears\ in\ all\ four\ \r\n\ files.\ Two\ words\ appear\ in\ three\ of\ the\ files,\ so\ maxNumber\ on\ those\ \r\n\ four\ files\ would\ return\ 3.\ This\ method\ assumes\ that\ the\ HashMap\ has\ already\ been\ \r\n\ constructed.\r\n\ \r\n\ \r\n
comment5.params=number
comment5.target=java.util.ArrayList\ wordsInNumFiles(int)
comment5.text=\r\n\ Write\ the\ method\ wordsInNumFiles\ that\ has\ one\ integer\ parameter\ called\ number.\ \r\n\ This\ method\ returns\ an\ ArrayList\ of\ words\ that\ appear\ in\ exactly\ number\ files.\r\n\ In\ the\ example\ above,\ the\ call\ wordsInNumFiles(3)\ would\ return\ an\ ArrayList\ with\ \r\n\ the\ words\ \ \u201Ccats\u201D\ and\ \u201Cand\u201D,\ and\ the\ call\ wordsInNumFiles(2)\ would\ return\ an\ ArrayList\ \r\n\ with\ the\ words\ \u201Clove\u201D,\ \u201Care\u201D,\ and\ \u201Cdogs\u201D,\ all\ the\ words\ that\ appear\ in\ exactly\ two\r\n\ files.\r\n
comment6.params=word
comment6.target=void\ printFilesIn(java.lang.String)
comment6.text=\r\n\ Write\ the\ void\ method\ printFilesIn\ that\ has\ one\ String\ parameter\ named\ word.\ \r\n\ This\ method\ prints\ the\ names\ of\ the\ files\ this\ word\ appears\ in,\ one\ filename\ \r\n\ per\ line.\ For\ example,\ in\ the\ example\ above,\ the\ call\ printFilesIn(\u201Ccats\u201D)\ would\ \r\n\ print\ the\ three\ filenames\:\ brief1.txt,\ brief3.txt,\ and\ brief4.txt,\ each\ on\ a\ \r\n\ separate\ line.\r\n\ \r\n
comment7.params=
comment7.target=void\ tester()
comment7.text=\r\n\ Write\ the\ void\ method\ tester\ that\ has\ no\ parameters.\ This\ method\ should\ call\ \r\n\ buildWordFileMap\ to\ select\ a\ group\ of\ files\ and\ build\ a\ HashMap\ of\ words,\ with\ \r\n\ each\ word\ mapped\ to\ an\ ArrayList\ of\ the\ filenames\ this\ word\ appears\ in,\ determine\ \r\n\ the\ maximum\ number\ of\ files\ any\ word\ is\ in,\ considering\ all\ words,\ and\ determine\r\n\ all\ the\ words\ that\ are\ in\ the\ maximum\ number\ of\ files\ and\ for\ each\ such\ word,\ print\r\n\ the\ filenames\ of\ the\ files\ it\ is\ in.\ (optional)\ If\ the\ map\ is\ not\ too\ big,\ then\ you\r\n\ might\ want\ to\ print\ out\ the\ complete\ map,\ all\ the\ keys,\ and\ for\ \r\n\ each\ key\ its\ ArrayList.\ This\ might\ be\ helpful\ to\ make\ sure\ the\ map\ was\ built\ correctly.\r\n
numComments=8
